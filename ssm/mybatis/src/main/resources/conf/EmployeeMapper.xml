<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evan.dao.EmpMapper">

    <!--
namespace:名称空间;指定为接口的全类名
id：唯一标识
resultType：返回值类型
#{id}：从传递过来的参数中取出id值

public Employee getEmpById(Integer id);
 -->
    <select id="getEmployeeById" resultType="emp">
        select id, last_name, gender, email
        from mybatis.tbl_employee
        where id = #{id}
    </select>
    <select id="getEmpByIdAndName" resultType="com.evan.domain.Employee">
        select *
        from mybatis.tbl_employee
        where id = #{id}
          and last_name = #{name}
    </select>

    <!--resultType：如果返回的是一个集合，要写集合中元素的类型  -->
    <select id="getEmpsByLastNameLike" resultType="com.evan.domain.Employee">
        select *
        from mybatis.tbl_employee
        where last_name like CONCAT('%', #{lastName}, '%')
    </select>
    <select id="getEmpMap" resultType="java.util.Map">
        select *
        from mybatis.tbl_employee
        where id = #{id};
    </select>
    <select id="getEmployeesMap" resultType="com.evan.domain.Employee">
        select *
        from mybatis.tbl_employee;
    </select>

    <insert id="addEmployee" parameterType="emp" useGeneratedKeys="true" keyProperty="id">
        insert into mybatis.tbl_employee (last_name, gender, email)
        values (#{lastName}, #{gender}, #{email})
    </insert>

    <update id="updateEmployee" parameterType="emp">
        update mybatis.tbl_employee
        set last_name = #{lastName},
            gender=#{gender},
            email=#{email}
        where id = ${id}
    </update>

    <delete id="deleteEmployee">
        delete
        from mybatis.tbl_employee
        where id = #{id}
    </delete>
</mapper>